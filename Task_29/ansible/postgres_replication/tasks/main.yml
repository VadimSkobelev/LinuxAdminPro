---
- name: Install base tools
  apt:
    name:
      - python3-pexpect
      - python3-psycopg2
    state: present
    update_cache: true

- name: Create replication user
  become_user: postgres
  postgresql_user:
    name: replication
    password: '{{ replicator_password }}'
    role_attr_flags: REPLICATION
  when: (ansible_hostname == "node1")

- name: Stop postgresql-server on node2
  service:
    name: postgresql
    state: stopped
  when: (ansible_hostname == "node2")

- name: Copy postgresql.conf
  template:
    src: postgresql.conf.j2
    dest: /etc/postgresql/14/main/postgresql.conf
    owner: postgres
    group: postgres
    mode: '0600'
  when: (ansible_hostname == "node1")

- name: Copy pg_hba.conf
  template:
    src: pg_hba.conf.j2
    dest: /etc/postgresql/14/main/pg_hba.conf
    owner: postgres
    group: postgres
    mode: '0600'
  when: (ansible_hostname == "node1")

- name: Restart postgresql-server on node1
  service:
    name: postgresql
    state: restarted
  when: (ansible_hostname == "node1")

- name: Remove files from data catalog
  file:
    path: /var/lib/postgresql/14/main/
    state: absent
  when: (ansible_hostname == "node2")

- name: Copy files from master to slave
  become_user: postgres
  expect:
    command: 'pg_basebackup -h {{ master_ip }} -U replication -p 5432 -D /var/lib/postgresql/14/main/ -R -P'
    responses:
      '.*Password*': "{{ replicator_password }}"
  when: (ansible_hostname == "node2")

- name: Copy postgresql.conf
  template:
    src: postgresql.conf.j2
    dest: /etc/postgresql/14/main/postgresql.conf
    owner: postgres
    group: postgres
    mode: '0600'
  when: (ansible_hostname == "node2")

- name: Copy pg_hba.conf
  template:
    src: pg_hba.conf.j2
    dest: /etc/postgresql/14/main/pg_hba.conf
    owner: postgres
    group: postgres
    mode: '0600'
  when: (ansible_hostname == "node2")

- name: Start postgresql-server on node2
  service:
    name: postgresql
    state: started
  when: (ansible_hostname == "node2")