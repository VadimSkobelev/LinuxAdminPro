---
- name: BACKUP-SERVER | Install and configure BorgBackup
  hosts: backup-server
  become: true
  
  tasks:
   - name: BACKUP-SERVER | Update
     apt:
      update_cache=yes

   - name: BACKUP-SERVER | Install BorgBackup
     apt:
      name: borgbackup
      state: latest

   - name: BACKUP-SERVER | Create partition
     parted:
      device: /dev/sdc
      number: 1
      state: present
       
   - name: BACKUP-SERVER | Create filesystem
     filesystem:
      fstype: ext4
      dev: /dev/sdc1

   - name: BACKUP-SERVER | Create mount point
     mount:
      fstype: ext4
      src: /dev/sdc1
      path: /var/backup
      state: mounted

   - name: BACKUP-SERVER | Add user borg
     user:
      name: borg
      password: borg

   - name: BACKUP-SERVER | Set attributes for /var/backup
     file:
      path: "/var/backup"
      owner: borg
      group: borg

   - name: BACKUP-SERVER | Clear backup directory
     shell: rm -rf /var/backup/*

   - name: BACKUP-SERVER | Create .ssh directory for borg user
     file:
      path: "/home/borg/.ssh"
      state: directory
      mode: '0700'
      owner: borg
      group: borg

   - name: BACKUP-SERVER | Create authorized_keys file for borg user
     file:
      path: "/home/borg/.ssh/authorized_keys"
      state: touch
      mode: '0600'
      owner: borg
      group: borg

- name: CLIENT | Install and configure BorgBackup
  hosts: client
  become: true
  vars:
    backup_server_ip: 192.168.56.10
  
  tasks:
   - name: CLIENT | Update
     apt:
      update_cache=yes

   - name: CLIENT | Install BorgBackup
     apt:
      name: borgbackup
      state: latest

   - name: CLIENT | Create log file for BorgBackup
     file:
       path: /var/log/borgbackup.log
       state: touch
       mode: '0666'
       owner: root
       group: root

   - name: CLIENT | Create rsyslog config file for borg
     copy:
       src: client/borgbackup.conf
       dest: /etc/rsyslog.d/borgbackup.conf

   - name: CLIENT | Restart rsyslog
     systemd:
       name: rsyslog
       state: restarted

   - name: CLIENT | Generate ssh keys for root user
     user:
       name: root
       generate_ssh_key: true

   - name: CLIENT | Pull public ssh key
     shell: cat /root/.ssh/id_rsa.pub
     register: ssh_key

   - name: CLIENT | Put ssh public key on backup server
     authorized_key:
       user: borg
       key: "{{ ssh_key.stdout }}"
     delegate_to: backup-server

   - name: CLIENT | Create known_hosts file
     file:
       path: /root/.ssh/known_hosts
       state: touch
       mode: '0600'
       owner: root
       group: root

   - name: CLIENT | Add backup-server into known_hosts
     shell: 'ssh-keyscan -H {{ backup_server_ip }} >> /root/.ssh/known_hosts'

   - name: CLIENT | Initializing borg repository on the backp-server
     shell: borg init --encryption=repokey borg@{{ backup_server_ip }}:/var/backup/
     environment:
       BORG_PASSPHRASE: backup1234

   - name: CLIENT | Copy borg configuration files
     copy:
       src: "client/{{ item }}"
       dest: /etc/systemd/system
     loop:
       - borg-backup.service
       - borg-backup.timer

   - name: CLIENT | Enable and start borg backup timer
     systemd:
       name: borg-backup.timer
       enabled: true
       state: started

   - name: CLIENT | First start borg backup service
     systemd:
       name: borg-backup.service
       state: started
...