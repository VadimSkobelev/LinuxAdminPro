ENV['VAGRANT_EXPERIMENTAL'] = 'disks'
Vagrant.configure(2) do |config|
  config.vm.define "kernel-update-from-src" do |srv| # Имя виртуальной машины в vagrant
    srv.vm.disk :disk, size: "40GB", primary: true # Размер диска в виртульной машине
    srv.vm.box = "centos/stream8" # Указываем какой образ (box) используем для создания виртуальной машины
    srv.vm.synced_folder "./", "/vagrant" # Файлы из текуший каталог хостовой машины будут скопированы в /vagrant виртуальной машины
    srv.vm.hostname = "task2-centos-src" # Hostname внутри самой машины
    srv.vm.provider "virtualbox" do |vb| # Используемое средство виртуализации (гипервизор)
      vb.memory = "2048" # Оперативная память, выделяемая виртуальной машине
      vb.cpus = "2" # Количестро ядер, выделяемых виртуальной машине
      vb.name = "Task2-centos-src" # Имя виртуальной машины в VirtualBox
    end

  config.vm.provision 'shell', reboot: true, inline: <<-SHELL # Запуск команд обновления ядра после развёртывания виртуальной машины
    cd /usr/src
    echo "Текущая версия ядра: $(uname -r)"
    
    echo ==============================================================
    echo Установка необходимых компонентов
    yum config-manager --set-enabled powertools # enable CentOS PowerTools repository
    yum install -y wget make gcc flex bison elfutils-libelf elfutils-libelf-devel openssl-devel python3 bc perl glibc-langpack-ru cloud-utils-growpart dwarves
    
    echo ==============================================================
    echo Расширение дисковой партиции
    growpart /dev/sda 1
    xfs_growfs /dev/sda1
    
    echo ==============================================================
    echo Загрузка исходного кода ядра с kernel.org
    wget https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.8.9.tar.xz
    
    echo ==============================================================
    echo Распаковка скачанного архива
    tar -xf linux-6.8.9.tar.xz
    cd linux-6.8.9
    
    echo ==============================================================
    echo Формирование файла конфигурации на основе текущей конфигурации
    yes "" | make oldconfig
    # Добавление в конфигурацию автоматической генерации ключей
    scripts/config --set-str SYSTEM_TRUSTED_KEYS ""
    scripts/config --set-str SYSTEM_REVOCATION_KEYS "" 
    
    echo ==============================================================
    echo Запуск сборки модулей и ядра в два потока
    make -j 2 && make modules -j 2
    
    echo ==============================================================
    echo Установка модулей и ядра
    make modules_install
    make install  
  SHELL
  
  config.vm.provision 'shell', inline: "echo Версия ядра после обновления: $(uname -r)" # Проверка новой версии ядра
  end
end