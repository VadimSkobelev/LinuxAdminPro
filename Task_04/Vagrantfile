
ENV['VAGRANT_EXPERIMENTAL'] = 'disks'
Vagrant.configure(2) do |config|
    config.vm.define "mdadm" do |srv| # Имя виртуальной машины в vagrant
      (1..4).each do |i|
        srv.vm.disk :disk, size: "250MB", name: "disk#{i}"
      end
      srv.vm.box = "generic/ubuntu2204" # Указываем какой образ (box) используем для создания виртуальной машины
      srv.vm.synced_folder "./", "/vagrant" # Файлы из текуший каталог хостовой машины будут скопированы в /vagrant виртуальной машины
      srv.vm.hostname = "task4-ubuntu2204" # Hostname внутри самой машины
      srv.vm.provider "virtualbox" do |vb| # Используемое средство виртуализации (гипервизор)
        vb.memory = "2048" # Оперативная память, выделяемая виртуальной машине
        vb.cpus = "2" # Количестро ядер, выделяемых виртуальной машине
        vb.name = "Task4-ubuntu2204" # Имя виртуальной машины в VirtualBox
      end

    config.vm.provision 'shell', inline: <<-SHELL
      echo "Начальная конфигурация дисков: $(lsblk)"
      echo ==============================================================
      df -h
      
      echo ==============================================================
      echo Конфигурируем RAID5 из 4 дисков.
      mdadm --create --verbose /dev/md127 -l 5 -n 4 /dev/sd{b,c,d,e}
      
      echo ==============================================================
      echo Сохраняем в файл mdadm.conf информацию о RAID-массиве.
      echo "DEVICE partitions" > /etc/mdadm/mdadm.conf
      mdadm --detail --scan --verbose | awk '/ARRAY/ {print}' >> /etc/mdadm/mdadm.conf
      
      echo ==============================================================
      echo Создаём GPT раздел на RAID.
      parted -s /dev/md127 mklabel gpt
      
      echo ==============================================================
      echo Создаем партиции.
      parted /dev/md127 mkpart primary ext4 0% 20%
      parted /dev/md127 mkpart primary ext4 20% 40%
      parted /dev/md127 mkpart primary ext4 40% 60%
      parted /dev/md127 mkpart primary ext4 60% 80%
      parted /dev/md127 mkpart primary ext4 80% 100%
      
      echo ==============================================================
      echo Создаём файловую систему ext4 на созданных ранее партициях.
      for i in $(seq 1 5); do sudo mkfs.ext4 /dev/md127p$i; done
      
      echo ==============================================================
      echo Монтируем созданные партиции. 
      mkdir -p /raid/part{1,2,3,4,5}
      for i in $(seq 1 5); do mount /dev/md127p$i /raid/part$i; done
      
      echo ==============================================================
      echo Сохраняем в файл /ect/fstab информацию о точках монтирования.
      for i in $(seq 1 5); do echo "`blkid /dev/md127p$i | awk '{print $2}'` /raid/part$i ext4 defaults 0 0" >> /etc/fstab; done
      
      echo ==============================================================
      echo Указываем диск /dev/sde как сбойный.
      mdadm /dev/md127 --fail /dev/sde
      mdadm -D /dev/md127
      
      echo ==============================================================
      echo Удаляем сбойный диск /dev/sde из RAID.
      mdadm /dev/md127 --remove /dev/sde
      mdadm -D /dev/md127
      
      echo ==============================================================
      echo "Добавляем новый диск /dev/sde в RAID (восстанавливаем)."
      mdadm /dev/md127 --add /dev/sde
      mdadm -D /dev/md127
      
      echo "Конфигурация дисков после всех манипуляций: $(lsblk)"
      echo ==============================================================
      df -h
    SHELL

    config.vm.provision "shell", inline: <<-SHELL
      mkdir -p ~root/.ssh
      cp ~vagrant/.ssh/auth* ~root/.ssh
      sudo sed -i 's/\#PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
      systemctl restart sshd
    SHELL
    end
end